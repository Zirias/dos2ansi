#ifndef DOS2ANSI_DECL_H
#define DOS2ANSI_DECL_H

#define DOS2ANSIVERSTR "%%VERSION%%"

#undef dos2ansi___cdecl
#undef SOEXPORT
#undef SOLOCAL
#undef DECLEXPORT

#define ATTR_ACCESS(x)
#define ATTR_ALLOCSZ(x)
#define ATTR_CONST
#define ATTR_FALLTHROUGH
#define ATTR_FORMAT(x)
#define ATTR_MALLOC
#define ATTR_NONNULL(x)
#define ATTR_NORETURN
#define ATTR_RETNONNULL
#define ATTR_PURE
#define CMETHOD

#ifdef __cplusplus
#  define dos2ansi___cdecl extern "C"
#  define DECLDATA
#  define C_CLASS_DECL(t) struct t
#else
#  define dos2ansi___cdecl
#  define DECLDATA extern
#  define C_CLASS_DECL(t) typedef struct t t
#endif

#if defined __has_attribute
#  if __has_attribute (access)
#    undef ATTR_ACCESS
#    define ATTR_ACCESS(x) __attribute__ ((access x))
#  endif
#  if __has_attribute (alloc_size)
#    undef ATTR_ALLOCSZ
#    define ATTR_ALLOCSZ(x) __attribute__ ((alloc_size x))
#  endif
#  if __has_attribute (const)
#    undef ATTR_CONST
#    define ATTR_CONST __attribute__ ((const))
#  endif
#  if __has_attribute (fallthrough)
#    undef ATTR_FALLTHROUGH
#    define ATTR_FALLTHROUGH __attribute__ ((fallthrough))
#  endif
#  if __has_attribute (format)
#    undef ATTR_FORMAT
#    define ATTR_FORMAT(x) __attribute__ ((format x))
#  endif
#  if __has_attribute (malloc)
#    undef ATTR_MALLOC
#    define ATTR_MALLOC __attribute__ ((malloc))
#  endif
#  if __has_attribute (nonnull)
#    undef ATTR_NONNULL
#    undef CMETHOD
#    define ATTR_NONNULL(x) __attribute__ ((nonnull x))
#    define CMETHOD __attribute__ ((nonnull (1)))
#  endif
#  if __has_attribute (noreturn)
#    undef ATTR_NORETURN
#    define ATTR_NORETURN __attribute__ ((noreturn))
#  endif
#  if __has_attribute (returns_nonnull)
#    undef ATTR_RETNONNULL
#    define ATTR_RETNONNULL __attribute__ ((returns_nonnull))
#  endif
#  if __has_attribute (pure)
#    undef ATTR_PURE
#    define ATTR_PURE __attribute__ ((pure))
#  endif
#  if __has_attribute (visibility)
#    define SOEXPORT dos2ansi___cdecl __attribute__((visibility("default")))
#    define SOLOCAL __attribute__((visibility("hidden")))
#  else
#    define SOEXPORT dos2ansi___cdecl
#    define SOLOCAL
#  endif
#endif
#define DECLEXPORT dos2ansi___cdecl

#if defined(__clang__)
#  define dos2ansi___compiler clang
#elif defined(__GNUC__)
#  define dos2ansi___compiler GCC
#endif
#ifdef dos2ansi___compiler
#  define dos2ansi___pragma(x) _Pragma(#x)
#  define dos2ansi___diagprag1(x,y) dos2ansi___pragma(x diagnostic y)
#  define dos2ansi___diagprag(x) dos2ansi___diagprag1(dos2ansi___compiler, x)
#  define dos2ansi___suppress1(x) dos2ansi___diagprag(ignored x)
#  define dos2ansi___suppress(x) dos2ansi___suppress1(#x)
#  define SUPPRESS(x) dos2ansi___diagprag(push) dos2ansi___suppress(-W##x)
#  define ENDSUPPRESS dos2ansi___diagprag(pop)
#else
#  define SUPPRESS(x)
#  define ENDSUPPRESS
#endif

#undef USE_POSIX
#undef USE_WIN32

#ifndef FORCE_STDIO
#  ifdef _WIN32
#    define USE_WIN32
#  else
#    if defined __has_include
#      if __has_include(<unistd.h>)
#        define USE_POSIX
#      endif
#    elif defined __unix__
#      define USE_POSIX
#    endif
#  endif
#endif

#ifdef USE_POSIX
#  define _POSIX_C_SOURCE 200112L
#endif

#endif
